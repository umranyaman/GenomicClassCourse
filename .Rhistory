x=father.son$height
source('~/.active-rstudio-document')
We can compute the percentiles for our list of heights:
```{r definingHeights, message=FALSE}
This is where statements like $X$ explains $\rho^2 \times 100$ % of the variation in $Y$: the variance of $Y$ is $\sigma^2$ and, once we condition, it goes down to $(1-\rho^2) \sigma^2_Y$ . It is important to remember that the "variance explained" statement only makes sense when the data is approximated by a bivariate normal distribution.
set.seed(1)
library(knitr)
opts_chunk$set(fig.path=paste0("figure/", sub("(.*).Rmd","\\1",basename(knitr:::knit_concord$get('infile'))), "-"))
knitr::opts_chunk$set(echo = TRUE)
library(rafalib)
data(father.son,package="UsingR") ##available from CRAN
x <- father.son$fheight
round(sample(x,20),1)
hist(x)
bins <- seq(floor(min(x)),ceiling(max(x)))
hist(x,breaks=bins,xlab="Height",main="Adult men heights")
load("C:/skew.RData")
dim(dat)
par(mfrow = c(3,3))
par(mfrow = c(3,3))
for (i in 1:9) {
**put your qqnorm call here**
par(mfrow = c(3,3))
for (i in 1:9) {
}
par(mfrow = c(3,3))
for (i in 1:9) {
qqnorm(dat)
}
dim(dat)
qqnorm(dat)
View(dat)
for (i in 1:9) {
qqnorm(dat[,i])
qqline(dat[,i])
}
hist(dat[,4])
head(InsectSprays)
head(InsectSprays)
boxplot(split(values, factor))
head(InsectSprays)
boxplot(split(values, factor))
a=data("InsectSprays")
head(InsectSprays)
boxplot(split(values, factor))
View(InsectSprays)
library(dplyr)
data(nym.2002, package="UsingR")
library(dplyr)
data(nym.2002, package="UsingR")
hist(nym.2002)
View(nym.2002)
library(dplyr)
data(nym.2002, package="UsingR")
hist(nym.2002[gender,"time"])
library(dplyr)
data(nym.2002, package="UsingR")
hist(nym.2002["gender","time"])
library(dplyr)
data(nym.2002, package="UsingR")
hist(nym.2002$gender,nym.2002$time])
library(dplyr)
data(nym.2002, package="UsingR")
hist(nym.2002$gender,nym.2002$time)
library(dplyr)
data(nym.2002, package="UsingR")
hist(nym.2002[,2:5])
library(dplyr)
data(nym.2002, package="UsingR")
hist(nym.2002[,2])
mypar(1,3)
males <- filter(nym.2002, gender=="Male") %>% select(time) %>% unlist
females <- filter(nym.2002, gender=="Female") %>% select(time) %>% unlist
boxplot(females, males)
hist(females,xlim=c(range( nym.2002$time)))
hist(males,xlim=c(range( nym.2002$time)))
View(nym.2002)
a=data("InsectSprays")
head(InsectSprays)
boxplot(split(values, factor))
View(InsectSprays)
load("C:/Umran 08102020/Project1/.RData")
View(femaleMiceWeights)
View(femaleControlsPopulation)
set.seed(1)
x=femaleControlsPopulation
X <- sample(x,5)
View(femaleControlsPopulation)
X <- sample(x,5)
install.packages("gapminder")
library(gapminder)
data(gapminder)
head(gapminder)
mean(gapminder$lifeExp<=40)
mean(gapminder$lifeExp<=40&gapminder$year=="1952")
mean(gapminder$lifeExp<=40|gapminder$year=="1952")
a=filter(gapminder,year=="1942")
mean(a<=40)
View(a)
a=filter(gapminder,year==1942)
a=select(gapminder,year==1942)
a=filter(gapminder,gapminder$year==1942)
a=filter(gapminder,gapminder$year=="1942")
x=femaleControlsPopulation
#make averages5
set.seed(1)
n <- 1000
averages5 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,5)
averages5[i] <- mean(X)
}
library(downloader)
install.packages("downloader")
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleControlsPopulation.csv"
filename <- basename(url)
download(url, destfile=filename)
x <- unlist( read.csv(filename) )
#make averages5
set.seed(1)
n <- 1000
averages5 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,5)
averages5[i] <- mean(X)
}
# make averages50
set.seed(1)
n <- 1000
averages50 <- vector("numeric",n)
for(i in 1:n){
X <- sample(x,50)
averages50[i] <- mean(X)
}
hist(averages5)
hist(averages50)
hist(averages5)
hist(averages50)
hist(averages5)
hist(averages50)
library(rafalib)
###mypar(1,2) is optional and is used to put both plots on one page
mypar(1,2)
hist(averages5, xlim=c(18,30))
hist(averages50, xlim=c(18,30))
hist(averages5)
hist(averages50)
pnorm(23,23.9,0.43)
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/mice_pheno.csv"
filename <- basename(url)
download(url, destfile=filename)
dat <- read.csv(filename)
dat <- na.omit( dat )
View(mice_pheno)
View(a)
View(dat)
chowweight=filter(dat, Diet=="chow")
mean(chowweight$Bodyweight)
chowweight=filter(dat, Diet=="chow"&Sex=="M")
mean(chowweight$Bodyweight)
popsd(chowweight)
popsd(chowweight$Bodyweight)
set.seed(1)
X=sample(x,25)
popsd(X)
mean(X)
popsd(X)
X=sample(x,25)
mean(X)
popsd(X)
set.seed(1)
X=sample(x,25)
mean(X)
popsd(X)
library(readr)
assoctest <- read_csv("assoctest.csv")
View(assoctest)
table(assoctest)
chisq.test(assoctest)
chisq.test((assoctest$allele))
chisq.test(table(assoctest))
fisher.test(table(assoctest))
data(nym.2002, package="UsingR")
data(nym.2002, package="UsingR")
force(nym.2002)
nym.2002=data(nym.2002, package="UsingR")
nym.2002=data(nym.2002, package="UsingR")
males <- filter(nym.2002, gender=="Male")
females <- filter(nym.2002, gender=="Female")
cor(males$age,males$time)
data(nym.2002, package="UsingR")
males <- filter(nym.2002, gender=="Male")
females <- filter(nym.2002, gender=="Female")
cor(males$age,males$time)
males <- filter(nym.2002, nym.2002$gender=="Male")
females <- filter(nym.2002, nym.2002$gender=="Female")
cor(males$age,males$time)
nym.2002$
males <- filter(nym.2002, nym.2002$gender=="Male")
females <- filter(nym.2002, nym.2002$gender=="Female")
cor(males$age,males$time)
library(UsingR)
install.packages(c("MASS", "HistData", "Hmisc", "lattice", "survival"))
data(nym.2002, package="UsingR")
males <- filter(nym.2002, gender=="Male")
females <- filter(nym.2002, gender=="Female")
cor(males$age,males$time)
View(nym.2002)
males <- filter(nym.2002, gender=="Male")
females <- filter(nym.2002, gender=="Female")
cor(males$age,males$time)
males <- filter(nym.2002, nym.2002$gender=="Male")
females <- filter(nym.2002, nym.2002$gender=="Female")
cor(males$age,males$time)
males$time=as.numeric(males$time)
time = sort(nym.2002$time)
median(time)
max(time/median(time))
min(time/median(time))
data(ChickWeight)
head(ChickWeight)
plot( ChickWeight$Time, ChickWeight$weight, col=ChickWeight$Diet)
chick = reshape(ChickWeight, idvar=c("Chick","Diet"), timevar="Time",
direction="wide")
head(chick)
chick = na.omit(chick)
View(chick)
c(mean(chick$weight.4)+3000/mean(chick$weight.4))
000/mean(chick$weight.4)
3000/mean(chick$weight.4)
mean(chick$weight.4)
3000/(mean(chick$weight.4)+1)
60.15556+49.05523
median(c(chick$weight.4, 3000))/mean(chick$weight.4)
sd(c(chick$weight.4, 3000))/mean(chick$weight.4)
sd((chick$weight.4)/mean(chick$weight.4)
sd((chick$weight.4)/mean(chick$weight.4))
sd(chick$weight.4)/mean(chick$weight.4)
7.205936-0.07114453
7.205936/0.07114453
data(ChickWeight)
head(ChickWeight)
plot( ChickWeight$Time, ChickWeight$weight, col=ChickWeight$Diet)
chick = reshape(ChickWeight, idvar=c("Chick","Diet"), timevar="Time",
direction="wide")
head(chick)
chick = na.omit(chick)
x=filter(chick, chich$Diet==1)
x=filter(chick, chick$Diet==1)
y=filter(x,x$)
x=select()
x=filter(chick, chick$Diet=="1")
x=filter(chick, Diet=="1")
x=select(chick, chick$Diet=="1")
git status
ls
